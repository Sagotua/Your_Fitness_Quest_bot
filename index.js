const TelegramBot = require("node-telegram-bot-api");
const token = "AAFBsIzl18s2Niblp1BhMtptCDonMhFgAeg";
const bot = new TelegramBot(token, { polling: true });

// ‚è∫ –¢–∏–º—á–∞—Å–æ–≤–µ —Å—Ö–æ–≤–∏—â–µ (—É –ø–∞–º'—è—Ç—ñ)
const results = {};

// üîò –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –≤–µ–±–¥–æ–¥–∞—Ç–æ–∫
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, "–ü—Ä–∏–≤—ñ—Ç! –ì–æ—Ç–æ–≤–∏–π –¥–æ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è? üí™", {
    reply_markup: {
      inline_keyboard: [[
        { text: "üöÄ –°—Ç–∞—Ä—Ç", web_app: { url: "https://your-fitness-quest-bot.vercel.app/" } }
      ]]
    }
  });
});

// üì© –ü—Ä–∏–π–æ–º –¥–∞–Ω–∏—Ö –∑ WebApp
bot.on("web_app_data", (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  
  try {
    const data = JSON.parse(msg.web_app_data.data); // –æ—á—ñ–∫—É—î–º–æ { exercise: "pushups", reps: [..] }

    if (!results[userId]) results[userId] = [];
    results[userId].push({
      exercise: data.exercise,
      reps: data.reps,
      date: new Date().toISOString()
    });

    console.log(`üìù –ó–±–µ—Ä–µ–∂–µ–Ω–æ –¥–ª—è ${userId}:`, data);
    bot.sendMessage(chatId, `‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è ${data.exercise} –∑–±–µ—Ä–µ–∂–µ–Ω–æ!`);
  } catch (e) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –¥–∞–Ω–∏—Ö:", e);
    bot.sendMessage(chatId, "‚ö†Ô∏è –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É.");
  }
});
